After applying this patch and running configure, you MUST run this
command before "make":

    make proto


--- orig/batch.c	2006-01-14 08:14:29
+++ batch.c	2004-07-03 20:15:41
@@ -225,6 +225,8 @@ void show_flist(int index, struct file_s
 		rprintf(FINFO, "flist->flags=%#x\n", fptr[i]->flags);
 		rprintf(FINFO, "flist->modtime=%#lx\n",
 			(long unsigned) fptr[i]->modtime);
+		rprintf(FINFO, "flist->atime=%#lx\n",
+			(long unsigned) fptr[i]->atime);
 		rprintf(FINFO, "flist->length=%.0f\n",
 			(double) fptr[i]->length);
 		rprintf(FINFO, "flist->mode=%#o\n", (int) fptr[i]->mode);
--- orig/flist.c	2006-01-17 02:15:59
+++ flist.c	2006-01-17 02:42:04
@@ -50,6 +50,7 @@ extern int preserve_perms;
 extern int preserve_devices;
 extern int preserve_uid;
 extern int preserve_gid;
+extern int preserve_atimes;
 extern int relative_paths;
 extern int implied_dirs;
 extern int copy_links;
@@ -139,16 +140,18 @@ static void list_file_entry(struct file_
 
 #ifdef SUPPORT_LINKS
 	if (preserve_links && S_ISLNK(f->mode)) {
-		rprintf(FINFO, "%s %11.0f %s %s -> %s\n",
+		rprintf(FINFO, "%s %11.0f %s %s %s -> %s\n",
 			perms,
 			(double)f->length, timestring(f->modtime),
+			timestring(f->atime),
 			f_name(f, NULL), f->u.link);
 	} else
 #endif
 	{
-		rprintf(FINFO, "%s %11.0f %s %s\n",
+		rprintf(FINFO, "%s %11.0f %s %s %s\n",
 			perms,
 			(double)f->length, timestring(f->modtime),
+			timestring(f->atime),
 			f_name(f, NULL));
 	}
 }
@@ -310,6 +313,7 @@ void send_file_entry(struct file_struct 
 {
 	unsigned short flags;
 	static time_t modtime;
+	static time_t atime;
 	static mode_t mode;
 	static int64 dev;
 	static dev_t rdev;
@@ -325,7 +329,7 @@ void send_file_entry(struct file_struct 
 
 	if (!file) {
 		write_byte(f, 0);
-		modtime = 0, mode = 0;
+		modtime = 0, atime = 0, mode = 0;
 		dev = 0, rdev = makedev(0, 0);
 		rdev_major = 0;
 		uid = 0, gid = 0;
@@ -374,6 +378,12 @@ void send_file_entry(struct file_struct 
 		flags |= XMIT_SAME_TIME;
 	else
 		modtime = file->modtime;
+	if (preserve_atimes && !S_ISDIR(mode)) {
+		if (file->atime == atime)
+			flags |= XMIT_SAME_ATIME;
+		else
+			atime = file->atime;
+	}
 
 #ifdef SUPPORT_HARD_LINKS
 	if (file->link_u.idev) {
@@ -427,6 +437,8 @@ void send_file_entry(struct file_struct 
 		write_int(f, modtime);
 	if (!(flags & XMIT_SAME_MODE))
 		write_int(f, to_wire_mode(mode));
+	if (preserve_atimes && !S_ISDIR(mode) && !(flags & XMIT_SAME_ATIME))
+		write_int(f, atime);
 	if (preserve_uid && !(flags & XMIT_SAME_UID)) {
 		if (!numeric_ids)
 			add_uid(uid);
@@ -494,6 +506,7 @@ static struct file_struct *receive_file_
 					      unsigned short flags, int f)
 {
 	static time_t modtime;
+	static time_t atime;
 	static mode_t mode;
 	static int64 dev;
 	static dev_t rdev;
@@ -512,7 +525,7 @@ static struct file_struct *receive_file_
 	struct file_struct *file;
 
 	if (!flist) {
-		modtime = 0, mode = 0;
+		modtime = 0, atime = 0, mode = 0;
 		dev = 0, rdev = makedev(0, 0);
 		rdev_major = 0;
 		uid = 0, gid = 0;
@@ -568,6 +581,8 @@ static struct file_struct *receive_file_
 		modtime = (time_t)read_int(f);
 	if (!(flags & XMIT_SAME_MODE))
 		mode = from_wire_mode(read_int(f));
+	if (preserve_atimes && !S_ISDIR(mode) && !(flags & XMIT_SAME_ATIME))
+		atime = (time_t)read_int(f);
 
 	if (preserve_uid && !(flags & XMIT_SAME_UID))
 		uid = (uid_t)read_int(f);
@@ -618,6 +633,7 @@ static struct file_struct *receive_file_
 
 	file->flags = 0;
 	file->modtime = modtime;
+	file->atime = atime;
 	file->length = file_length;
 	file->mode = mode;
 	file->uid = uid;
@@ -864,6 +880,7 @@ struct file_struct *make_file(char *fnam
 
 	file->flags = flags;
 	file->modtime = st.st_mtime;
+	file->atime = st.st_atime;
 	file->length = st.st_size;
 	if (chmod_modes && am_sender && (S_ISREG(st.st_mode) || S_ISDIR(st.st_mode)))
 		file->mode = tweak_mode(st.st_mode, chmod_modes);
--- orig/generator.c	2006-01-14 20:27:09
+++ generator.c	2005-12-15 23:05:32
@@ -44,6 +44,7 @@ extern int preserve_uid;
 extern int preserve_gid;
 extern int preserve_times;
 extern int omit_dir_times;
+extern int preserve_atimes;
 extern int delete_before;
 extern int delete_during;
 extern int delete_after;
@@ -343,10 +344,18 @@ void itemize(struct file_struct *file, i
 
 		if (S_ISREG(file->mode) && file->length != st->st_size)
 			iflags |= ITEM_REPORT_SIZE;
-		if ((iflags & (ITEM_TRANSFER|ITEM_LOCAL_CHANGE) && !keep_time
-		     && (!(iflags & ITEM_XNAME_FOLLOWS) || *xname))
-		    || (keep_time && cmp_modtime(file->modtime, st->st_mtime) != 0))
+		if (iflags & (ITEM_TRANSFER|ITEM_LOCAL_CHANGE) && !keep_time
+		     && (!(iflags & ITEM_XNAME_FOLLOWS) || *xname)) {
 			iflags |= ITEM_REPORT_TIME;
+			if (!preserve_atimes && !S_ISDIR(file->mode))
+				iflags |= ITEM_REPORT_ATIME;
+		} else {
+			if (keep_time && cmp_time(file->modtime, st->st_mtime) != 0)
+				iflags |= ITEM_REPORT_TIME;
+			if (preserve_atimes && !S_ISDIR(file->mode)
+			 && cmp_time(file->atime, st->st_atime) != 0)
+				iflags |= ITEM_REPORT_ATIME;
+		}
 		if (preserve_perms
 		 && (file->mode & CHMOD_BITS) != (st->st_mode & CHMOD_BITS))
 			iflags |= ITEM_REPORT_PERMS;
@@ -395,7 +404,7 @@ int unchanged_file(char *fn, struct file
 	if (ignore_times)
 		return 0;
 
-	return cmp_modtime(st->st_mtime, file->modtime) == 0;
+	return cmp_time(st->st_mtime, file->modtime) == 0;
 }
 
 
@@ -555,7 +564,7 @@ static int find_fuzzy(struct file_struct
 		name = fp->basename;
 
 		if (fp->length == file->length
-		    && cmp_modtime(fp->modtime, file->modtime) == 0) {
+		    && cmp_time(fp->modtime, file->modtime) == 0) {
 			if (verbose > 4) {
 				rprintf(FINFO,
 					"fuzzy size/modtime match for %s\n",
@@ -1068,7 +1077,7 @@ static void recv_generator(char *fname, 
 	}
 
 	if (update_only && statret == 0
-	    && cmp_modtime(st.st_mtime, file->modtime) > 0) {
+	    && cmp_time(st.st_mtime, file->modtime) > 0) {
 		if (verbose > 1)
 			rprintf(FINFO, "%s is newer\n", fname);
 		return;
--- orig/log.c	2006-01-17 02:16:40
+++ log.c	2005-12-15 23:05:44
@@ -38,6 +38,7 @@ extern int module_id;
 extern int msg_fd_out;
 extern int protocol_version;
 extern int preserve_times;
+extern int preserve_atimes;
 extern int log_format_has_i;
 extern int log_format_has_o_or_i;
 extern int daemon_log_format_has_o_or_i;
@@ -542,11 +543,14 @@ static void log_formatted(enum logcode c
 			n[4] = !(iflags & ITEM_REPORT_TIME) ? '.'
 			     : !preserve_times || IS_DEVICE(file->mode)
 					       || S_ISLNK(file->mode) ? 'T' : 't';
-			n[5] = !(iflags & ITEM_REPORT_PERMS) ? '.' : 'p';
-			n[6] = !(iflags & ITEM_REPORT_OWNER) ? '.' : 'o';
-			n[7] = !(iflags & ITEM_REPORT_GROUP) ? '.' : 'g';
-			n[8] = !(iflags & ITEM_REPORT_XATTRS) ? '.' : 'a';
-			n[9] = '\0';
+			n[5] = !(iflags & ITEM_REPORT_ATIME) ? '.'
+			     : !preserve_atimes || IS_DEVICE(file->mode)
+					        || S_ISLNK(file->mode) ? 'A' : 'a';
+			n[6] = !(iflags & ITEM_REPORT_PERMS) ? '.' : 'p';
+			n[7] = !(iflags & ITEM_REPORT_OWNER) ? '.' : 'o';
+			n[8] = !(iflags & ITEM_REPORT_GROUP) ? '.' : 'g';
+			n[9] = !(iflags & ITEM_REPORT_XATTRS) ? '.' : 'a';
+			n[10] = '\0';
 
 			if (iflags & (ITEM_IS_NEW|ITEM_MISSING_DATA)) {
 				char ch = iflags & ITEM_IS_NEW ? '+' : '?';
--- orig/options.c	2006-01-14 08:14:30
+++ options.c	2005-11-07 04:32:19
@@ -50,6 +50,7 @@ int preserve_uid = 0;
 int preserve_gid = 0;
 int preserve_times = 0;
 int omit_dir_times = 0;
+int preserve_atimes = 0;
 int update_only = 0;
 int cvs_exclude = 0;
 int dry_run = 0;
@@ -293,8 +294,9 @@ void usage(enum logcode F)
   rprintf(F," -o, --owner                 preserve owner (root only)\n");
   rprintf(F," -g, --group                 preserve group\n");
   rprintf(F," -D, --devices               preserve devices (root only)\n");
-  rprintf(F," -t, --times                 preserve times\n");
-  rprintf(F," -O, --omit-dir-times        omit directories when preserving times\n");
+  rprintf(F," -t, --times                 preserve modify times\n");
+  rprintf(F," -O, --omit-dir-times        omit directories when preserving modify times\n");
+  rprintf(F," -k, --atimes                preserve (keep) access times\n");
   rprintf(F,"     --chmod=CHMOD           change destination permissions\n");
   rprintf(F," -S, --sparse                handle sparse files efficiently\n");
   rprintf(F," -n, --dry-run               show what would have been transferred\n");
@@ -402,6 +404,9 @@ static struct poptOption long_options[] 
   {"times",           't', POPT_ARG_VAL,    &preserve_times, 1, 0, 0 },
   {"no-times",         0,  POPT_ARG_VAL,    &preserve_times, 0, 0, 0 },
   {"no-t",             0,  POPT_ARG_VAL,    &preserve_times, 0, 0, 0 },
+  {"atimes",          'k', POPT_ARG_VAL,    &preserve_atimes, 1, 0, 0 },
+  {"no-atimes",        0,  POPT_ARG_VAL,    &preserve_atimes, 0, 0, 0 },
+  {"no-k",             0,  POPT_ARG_VAL,    &preserve_atimes, 0, 0, 0 },
   {"omit-dir-times",  'O', POPT_ARG_VAL,    &omit_dir_times, 2, 0, 0 },
   {"modify-window",    0,  POPT_ARG_INT,    &modify_window, OPT_MODIFY_WINDOW, 0, 0 },
   {"owner",           'o', POPT_ARG_VAL,    &preserve_uid, 1, 0, 0 },
@@ -1442,6 +1447,8 @@ void server_options(char **args,int *arg
 		argstr[x++] = 'D';
 	if (preserve_times)
 		argstr[x++] = 't';
+	if (preserve_atimes)
+		argstr[x++] = 'k';
 	if (omit_dir_times == 2 && am_sender)
 		argstr[x++] = 'O';
 	if (preserve_perms)
--- orig/rsync.c	2006-01-14 08:14:31
+++ rsync.c	2005-07-28 00:17:37
@@ -27,6 +27,7 @@ extern int dry_run;
 extern int daemon_log_format_has_i;
 extern int preserve_times;
 extern int omit_dir_times;
+extern int preserve_atimes;
 extern int am_root;
 extern int am_server;
 extern int am_sender;
@@ -56,6 +57,7 @@ int set_perms(char *fname,struct file_st
 	int updated = 0;
 	STRUCT_STAT st2;
 	int change_uid, change_gid;
+	time_t atime, mtime;
 
 	if (!st) {
 		if (dry_run)
@@ -70,16 +72,29 @@ int set_perms(char *fname,struct file_st
 
 	if (!preserve_times || (S_ISDIR(st->st_mode) && omit_dir_times))
 		flags |= PERMS_SKIP_MTIME;
+	if (!preserve_atimes || S_ISDIR(st->st_mode))
+		flags |= PERMS_SKIP_ATIME;
 	if (!(flags & PERMS_SKIP_MTIME)
-	    && cmp_modtime(st->st_mtime, file->modtime) != 0) {
-		int ret = set_modtime(fname, file->modtime, st->st_mode);
+	    && cmp_time(st->st_mtime, file->modtime) != 0) {
+		mtime = file->modtime;
+		updated = 1;
+	} else
+		mtime = st->st_mtime;
+	if (!(flags & PERMS_SKIP_ATIME)
+	    && cmp_time(st->st_atime, file->atime) != 0) {
+		atime = file->atime;
+		updated = 1;
+	} else
+		atime = st->st_atime;
+	if (updated) {
+		int ret = set_times(fname, mtime, atime, st->st_mode);
 		if (ret < 0) {
 			rsyserr(FERROR, errno, "failed to set times on %s",
 				full_fname(fname));
 			return 0;
 		}
-		if (ret == 0) /* ret == 1 if symlink could not be set */
-			updated = 1;
+		if (ret > 0) /* ret == 1 if symlink could not be set */
+			updated = 0;
 	}
 
 	change_uid = am_root && preserve_uid && st->st_uid != file->uid;
--- orig/rsync.h	2006-01-14 20:27:10
+++ rsync.h	2005-07-28 00:04:51
@@ -54,6 +54,7 @@
 #define XMIT_HAS_IDEV_DATA (1<<9)
 #define XMIT_SAME_DEV (1<<10)
 #define XMIT_RDEV_MINOR_IS_SMALL (1<<11)
+#define XMIT_SAME_ATIME (1<<12)
 
 /* These flags are used in the live flist data. */
 
@@ -119,6 +120,7 @@
 
 #define PERMS_REPORT		(1<<0)
 #define PERMS_SKIP_MTIME	(1<<1)
+#define PERMS_SKIP_ATIME	(1<<2)
 
 #define FULL_FLUSH	1
 #define NORMAL_FLUSH	0
@@ -135,6 +137,7 @@
 #define FNAMECMP_FUZZY		0x83
 
 /* For use by the itemize_changes code */
+#define ITEM_REPORT_ATIME (1<<0)
 #define ITEM_REPORT_CHECKSUM (1<<1)
 #define ITEM_REPORT_SIZE (1<<2)
 #define ITEM_REPORT_TIME (1<<3)
@@ -517,6 +520,7 @@ struct file_struct {
 		struct hlink *links;
 	} link_u;
 	time_t modtime;
+	time_t atime;
 	uid_t uid;
 	gid_t gid;
 	mode_t mode;
--- orig/rsync.yo	2006-01-14 08:14:31
+++ rsync.yo	2005-11-07 04:34:55
@@ -319,8 +319,9 @@ to the detailed description below for a 
  -o, --owner                 preserve owner (root only)
  -g, --group                 preserve group
  -D, --devices               preserve devices (root only)
- -t, --times                 preserve times
- -O, --omit-dir-times        omit directories when preserving times
+ -t, --times                 preserve modify times
+ -O, --omit-dir-times        omit directories when preserving mod-times
+ -k, --atimes                preserve access times
      --chmod=CHMOD           change destination permissions
  -S, --sparse                handle sparse files efficiently
  -n, --dry-run               show what would have been transferred
@@ -711,6 +712,12 @@ it is preserving modification times (see
 the directories on the receiving side, it is a good idea to use bf(-O).
 This option is inferred if you use bf(--backup) without bf(--backup-dir).
 
+dit(bf(-k, --atimes)) This tells rsync to keep the access times of the
+destination files the same value as the source files.  Note that the
+reading of the source file may update the atime of the source files, so
+repeated rsync runs with --atimes may be needed if you want to force the
+access-time values to be 100% identical on the two systems.
+
 dit(bf(--chmod)) This options tells rsync to apply the listed "chmod" pattern
 to the permission of the files on the destination.  In addition to the normal
 parsing rules specified in the chmod manpage, you can specify an item that
@@ -1160,7 +1167,7 @@ changes that are being made to each file
 This is exactly the same as specifying bf(--log-format='%i %n%L').
 
 The "%i" escape has a cryptic output that is 9 letters long.  The general
-format is like the string bf(UXcstpoga)), where bf(U) is replaced by the
+format is like the string bf(UXcstapogx)), where bf(U) is replaced by the
 kind of update being done, bf(X) is replaced by the file-type, and the
 other letters represent attributes that may be output if they are being
 modified.
@@ -1199,17 +1206,22 @@ quote(itemize(
   by the file transfer.
   it() A bf(t) means the modification time is different and is being updated
   to the sender's value (requires bf(--times)).  An alternate value of bf(T)
-  means that the time will be set to the transfer time, which happens
+  means that the modify time will be set to the transfer time, which happens
   anytime a symlink is transferred, or when a file or device is transferred
   without bf(--times).
+  it() A bf(a) means the access time is different and is being updated to
+  the sender's value (requires bf(--atimes)).  An alternate value of bf(A)
+  means that the access time  will be set to the transfer time, which happens
+  anytime a symlink is transferred, or when a file or device is transferred
+  without bf(--atimes).
   it() A bf(p) means the permissions are different and are being updated to
   the sender's value (requires bf(--perms)).
   it() An bf(o) means the owner is different and is being updated to the
   sender's value (requires bf(--owner) and root privileges).
   it() A bf(g) means the group is different and is being updated to the
   sender's value (requires bf(--group) and the authority to set the group).
-  it() The bf(a) is reserved for a future enhanced version that supports
-  extended file attributes, such as ACLs.
+  it() The bf(x) is reserved for a future enhanced version that supports
+  extended file attributes.
 ))
 
 One other output is possible:  when deleting files, the "%i" will output
--- orig/testsuite/atimes.test	2004-06-30 00:06:23
+++ testsuite/atimes.test	2004-06-30 00:06:23
@@ -0,0 +1,19 @@
+#! /bin/sh
+
+# Test rsync copying atimes
+
+. "$suitedir/rsync.fns"
+
+set -x
+
+mkdir "$fromdir"
+
+touch "$fromdir/foo"
+touch -a -t 200102031717.42 "$fromdir/foo"
+
+TLS_ARGS=--atime
+
+checkit "$RSYNC -rtAgvvv \"$fromdir/\" \"$todir/\"" "$fromdir" "$todir"
+
+# The script would have aborted on error, so getting here means we've won.
+exit 0
--- orig/testsuite/itemize.test	2005-12-15 23:00:49
+++ testsuite/itemize.test	2005-12-15 23:11:34
@@ -44,14 +44,14 @@ ln "$fromdir/foo/config1" "$fromdir/foo/
 $RSYNC -iplr "$fromdir/" "$todir/" \
     | tee "$outfile"
 cat <<EOT >"$chkfile"
-cd+++++++ bar/
-cd+++++++ bar/baz/
->f+++++++ bar/baz/rsync
-cd+++++++ foo/
->f+++++++ foo/config1
->f+++++++ foo/config2
->f+++++++ foo/extra
-cL+++++++ foo/sym -> ../bar/baz/rsync
+cd++++++++ bar/
+cd++++++++ bar/baz/
+>f++++++++ bar/baz/rsync
+cd++++++++ foo/
+>f++++++++ foo/config1
+>f++++++++ foo/config2
+>f++++++++ foo/extra
+cL++++++++ foo/sym -> ../bar/baz/rsync
 EOT
 diff $diffopt "$chkfile" "$outfile" || test_fail "test 1 failed"
 
@@ -63,10 +63,10 @@ chmod 601 "$fromdir/foo/config2"
 $RSYNC -iplrH "$fromdir/" "$todir/" \
     | tee "$outfile"
 cat <<EOT >"$chkfile"
->f..T.... bar/baz/rsync
->f..T.... foo/config1
->f.sTp... foo/config2
-hf..T.... foo/extra => foo/config1
+>f..TA.... bar/baz/rsync
+>f..TA.... foo/config1
+>f.sTAp... foo/config2
+hf..TA.... foo/extra => foo/config1
 EOT
 diff $diffopt "$chkfile" "$outfile" || test_fail "test 2 failed"
 
@@ -83,11 +83,11 @@ chmod 777 "$todir/bar/baz/rsync"
 $RSYNC -iplrtc "$fromdir/" "$todir/" \
     | tee "$outfile"
 cat <<EOT >"$chkfile"
-.f..tp... bar/baz/rsync
-.d..t.... foo/
-.f..t.... foo/config1
->fcstp... foo/config2
-cL..T.... foo/sym -> ../bar/baz/rsync
+.f..t.p... bar/baz/rsync
+.d..t..... foo/
+.f..t..... foo/config1
+>fcst.p... foo/config2
+cL..TA.... foo/sym -> ../bar/baz/rsync
 EOT
 diff $diffopt "$chkfile" "$outfile" || test_fail "test 3 failed"
 
@@ -112,15 +112,15 @@ $RSYNC -ivvplrtH "$fromdir/" "$todir/" \
     | tee "$outfile"
 filter_outfile
 cat <<EOT >"$chkfile"
-.d        ./
-.d        bar/
-.d        bar/baz/
-.f...p... bar/baz/rsync
-.d        foo/
-.f        foo/config1
->f..t.... foo/config2
-hf        foo/extra
-.L        foo/sym -> ../bar/baz/rsync
+.d         ./
+.d         bar/
+.d         bar/baz/
+.f....p... bar/baz/rsync
+.d         foo/
+.f         foo/config1
+>f..t..... foo/config2
+hf         foo/extra
+.L         foo/sym -> ../bar/baz/rsync
 EOT
 diff $diffopt "$chkfile" "$outfile" || test_fail "test 5 failed"
 
@@ -139,8 +139,8 @@ touch "$todir/foo/config2"
 $RSYNC -iplrtH "$fromdir/" "$todir/" \
     | tee "$outfile"
 cat <<EOT >"$chkfile"
-.f...p... foo/config1
->f..t.... foo/config2
+.f....p... foo/config1
+>f..t..... foo/config2
 EOT
 diff $diffopt "$chkfile" "$outfile" || test_fail "test 7 failed"
 
@@ -149,15 +149,15 @@ $RSYNC -ivvplrtH --copy-dest="$lddir" "$
     | tee "$outfile"
 filter_outfile
 cat <<EOT >"$chkfile"
-.d..t.... ./
-cd+++++++ bar/
-cd+++++++ bar/baz/
-cf        bar/baz/rsync
-cd+++++++ foo/
-cf        foo/config1
-cf        foo/config2
-hf        foo/extra => foo/config1
-cL..T.... foo/sym -> ../bar/baz/rsync
+.d..t..... ./
+cd++++++++ bar/
+cd++++++++ bar/baz/
+cf         bar/baz/rsync
+cd++++++++ foo/
+cf         foo/config1
+cf         foo/config2
+hf         foo/extra => foo/config1
+cL..T..... foo/sym -> ../bar/baz/rsync
 EOT
 diff $diffopt "$chkfile" "$outfile" || test_fail "test 8 failed"
 
@@ -165,11 +165,11 @@ rm -rf "$todir"
 $RSYNC -iplrtH --copy-dest="$lddir" "$fromdir/" "$todir/" \
     | tee "$outfile"
 cat <<EOT >"$chkfile"
-.d..t.... ./
-cd+++++++ bar/
-cd+++++++ bar/baz/
-cd+++++++ foo/
-hf        foo/extra => foo/config1
+.d..t..... ./
+cd++++++++ bar/
+cd++++++++ bar/baz/
+cd++++++++ foo/
+hf         foo/extra => foo/config1
 EOT
 diff $diffopt "$chkfile" "$outfile" || test_fail "test 9 failed"
 
@@ -196,15 +196,15 @@ $RSYNC -ivvplrtH --link-dest="$lddir" "$
     | tee "$outfile"
 filter_outfile
 cat <<EOT >"$chkfile"
-.d..t.... ./
-cd+++++++ bar/
-cd+++++++ bar/baz/
-hf        bar/baz/rsync
-cd+++++++ foo/
-hf        foo/config1
-hf        foo/config2
-hf        foo/extra => foo/config1
-hL        foo/sym -> ../bar/baz/rsync
+.d..t..... ./
+cd++++++++ bar/
+cd++++++++ bar/baz/
+hf         bar/baz/rsync
+cd++++++++ foo/
+hf         foo/config1
+hf         foo/config2
+hf         foo/extra => foo/config1
+hL         foo/sym -> ../bar/baz/rsync
 EOT
 diff $diffopt "$chkfile" "$outfile" || test_fail "test 11 failed"
 
@@ -212,10 +212,10 @@ rm -rf "$todir"
 $RSYNC -iplrtH --link-dest="$lddir" "$fromdir/" "$todir/" \
     | tee "$outfile"
 cat <<EOT >"$chkfile"
-.d..t.... ./
-cd+++++++ bar/
-cd+++++++ bar/baz/
-cd+++++++ foo/
+.d..t..... ./
+cd++++++++ bar/
+cd++++++++ bar/baz/
+cd++++++++ foo/
 EOT
 diff $diffopt "$chkfile" "$outfile" || test_fail "test 12 failed"
 
@@ -243,14 +243,14 @@ filter_outfile
 # TODO fix really-old problem when combining -H with --compare-dest:
 # missing output for foo/extra hard-link (and it might not be updated)!
 cat <<EOT >"$chkfile"
-.d..t.... ./
-cd+++++++ bar/
-cd+++++++ bar/baz/
-.f        bar/baz/rsync
-cd+++++++ foo/
-.f        foo/config1
-.f        foo/config2
-.L        foo/sym -> ../bar/baz/rsync
+.d..t..... ./
+cd++++++++ bar/
+cd++++++++ bar/baz/
+.f         bar/baz/rsync
+cd++++++++ foo/
+.f         foo/config1
+.f         foo/config2
+.L         foo/sym -> ../bar/baz/rsync
 EOT
 diff $diffopt "$chkfile" "$outfile" || test_fail "test 14 failed"
 
@@ -258,10 +258,10 @@ rm -rf "$todir"
 $RSYNC -iplrtH --compare-dest="$lddir" "$fromdir/" "$todir/" \
     | tee "$outfile"
 cat <<EOT >"$chkfile"
-.d..t.... ./
-cd+++++++ bar/
-cd+++++++ bar/baz/
-cd+++++++ foo/
+.d..t..... ./
+cd++++++++ bar/
+cd++++++++ bar/baz/
+cd++++++++ foo/
 EOT
 diff $diffopt "$chkfile" "$outfile" || test_fail "test 15 failed"
 
--- orig/testsuite/rsync.fns	2005-06-10 21:33:28
+++ testsuite/rsync.fns	2005-07-28 00:41:20
@@ -50,7 +50,7 @@ printmsg() {
 
 
 rsync_ls_lR() {
-    find "$@" -print | sort | sed 's/ /\\ /g' | xargs "$TOOLDIR/tls"
+    find "$@" -print | sort | sed 's/ /\\ /g' | xargs "$TOOLDIR/tls" $TLS_ARGS
 }
 
 rsync_getgroups() { 
@@ -158,6 +158,10 @@ checkit() {
     # We can just write everything to stdout/stderr, because the
     # wrapper hides it unless there is a problem.
 
+    if test x$TLS_ARGS = x--atime; then
+	( cd "$2" && rsync_ls_lR . ) > "$tmpdir/ls-from"
+    fi
+
     echo "Running: \"$1\""  
     eval "$1" 
     status=$?
@@ -165,10 +169,13 @@ checkit() {
 	failed="YES";
     fi
 
+    if test x$TLS_ARGS != x--atime; then
+	( cd "$2" && rsync_ls_lR . ) > "$tmpdir/ls-from"
+    fi
+
     echo "-------------"
     echo "check how the directory listings compare with diff:"
     echo ""
-    ( cd "$2" && rsync_ls_lR . ) > "$tmpdir/ls-from"
     ( cd "$3" && rsync_ls_lR . ) > "$tmpdir/ls-to"
     diff $diffopt "$tmpdir/ls-from" "$tmpdir/ls-to" || failed=YES
 
--- orig/tls.c	2005-09-24 17:40:31
+++ tls.c	2005-03-23 17:49:48
@@ -39,6 +39,7 @@
 
 
 #include "rsync.h"
+#include "popt.h"
 
 #define PROGRAM "tls"
 
@@ -48,6 +49,7 @@ int read_only = 1;
 int list_only = 0;
 int preserve_perms = 0;
 
+static int display_atime = 0;
 
 static void failed(char const *what, char const *where)
 {
@@ -56,14 +58,29 @@ static void failed(char const *what, cha
 	exit(1);
 }
 
+static void storetime(char *dest, time_t t)
+{
+	if (t) {
+		struct tm *mt = gmtime(&t);
 
+		sprintf(dest, "%04d-%02d-%02d %02d:%02d:%02d ",
+			(int)mt->tm_year + 1900,
+			(int)mt->tm_mon + 1,
+			(int)mt->tm_mday,
+			(int)mt->tm_hour,
+			(int)mt->tm_min,
+			(int)mt->tm_sec);
+	} else {
+		strcpy(dest, "                    ");
+	}
+}	
 
 static void list_file(const char *fname)
 {
 	STRUCT_STAT buf;
 	char permbuf[PERMSTRING_SIZE];
-	struct tm *mt;
-	char datebuf[50];
+	char mtimebuf[50];
+	char atimebuf[50];
 	char linkbuf[4096];
 
 	if (do_lstat(fname, &buf) < 0)
@@ -96,19 +113,8 @@ static void list_file(const char *fname)
 
 	permstring(permbuf, buf.st_mode);
 
-	if (buf.st_mtime) {
-		mt = gmtime(&buf.st_mtime);
-
-		sprintf(datebuf, "%04d-%02d-%02d %02d:%02d:%02d",
-			(int)mt->tm_year + 1900,
-			(int)mt->tm_mon + 1,
-			(int)mt->tm_mday,
-			(int)mt->tm_hour,
-			(int)mt->tm_min,
-			(int)mt->tm_sec);
-	} else {
-		strcpy(datebuf, "                   ");
-	}
+	storetime(mtimebuf, buf.st_mtime);
+	storetime(atimebuf, buf.st_atime);
 
 	/* TODO: Perhaps escape special characters in fname? */
 
@@ -119,24 +125,55 @@ static void list_file(const char *fname)
 		    (long)minor(buf.st_rdev));
 	} else /* NB: use double for size since it might not fit in a long. */
 		printf("%12.0f", (double)buf.st_size);
-	printf(" %6ld.%-6ld %6ld %s %s%s\n",
+	printf(" %6ld.%-6ld %6ld %s%s%s%s\n",
 	       (long)buf.st_uid, (long)buf.st_gid, (long)buf.st_nlink,
-	       datebuf, fname, linkbuf);
+ 	       mtimebuf, display_atime && !S_ISDIR(buf.st_mode) ? atimebuf : "",
+	       fname, linkbuf);
 }
 
+static struct poptOption long_options[] = {
+  /* longName, shortName, argInfo, argPtr, value, descrip, argDesc */
+  {"atime",           'u', POPT_ARG_NONE,   &display_atime, 0,   0, 0},
+  {"help",            'h', POPT_ARG_NONE,   0,              'h', 0, 0},
+  {0,0,0,0,0,0,0}
+};
+
+static void tls_usage(int ret)
+{
+	fprintf(stderr, "usage: " PROGRAM " [--atime | -u] DIR ...\n"
+	    "Trivial file listing program for portably checking rsync\n");
+	exit(ret);
+}
 
 int
 main(int argc, char *argv[])
 {
-	if (argc < 2) {
-		fprintf(stderr, "usage: " PROGRAM " DIR ...\n"
-			"Trivial file listing program for portably checking rsync\n");
-		return 1;
+	poptContext pc;
+	const char **extra_args;
+	int opt;
+
+	pc = poptGetContext(PROGRAM, argc, (const char **)argv,
+			    long_options, 0);
+	while ((opt = poptGetNextOpt(pc)) != -1) {
+		switch (opt) {
+		case 'h':
+			tls_usage(0);
+		default:
+			fprintf(stderr,
+			        "%s: %s\n",
+				poptBadOption(pc, POPT_BADOPTION_NOALIAS),
+				poptStrerror(opt));
+			tls_usage(1);
+		}
 	}
 
-	for (argv++; *argv; argv++) {
-		list_file(*argv);
-	}
+	extra_args = poptGetArgs(pc);
+	if (*extra_args == NULL)
+		tls_usage(1);
+
+	for (; *extra_args; extra_args++)
+		list_file(*extra_args);
+	poptFreeContext(pc);
 
 	return 0;
 }
--- orig/util.c	2006-01-14 08:14:31
+++ util.c	2006-01-14 08:20:29
@@ -130,7 +130,7 @@ void overflow_exit(char *str)
 
 
 
-int set_modtime(char *fname, time_t modtime, mode_t mode)
+int set_times(char *fname, time_t modtime, time_t atime, mode_t mode)
 {
 #if !defined HAVE_LUTIMES || !defined HAVE_UTIMES
 	if (S_ISLNK(mode))
@@ -138,9 +138,13 @@ int set_modtime(char *fname, time_t modt
 #endif
 
 	if (verbose > 2) {
-		rprintf(FINFO, "set modtime of %s to (%ld) %s",
+		char mtimebuf[200];
+
+		strlcpy(mtimebuf, timestring(modtime), sizeof mtimebuf);
+		rprintf(FINFO,
+			"set modtime, atime of %s to (%ld) %s, (%ld) %s\n",
 			fname, (long)modtime,
-			asctime(localtime(&modtime)));
+			mtimebuf, (long)atime, timestring(atime));
 	}
 
 	if (dry_run)
@@ -149,7 +153,7 @@ int set_modtime(char *fname, time_t modt
 	{
 #ifdef HAVE_UTIMES
 		struct timeval t[2];
-		t[0].tv_sec = time(NULL);
+		t[0].tv_sec = atime;
 		t[0].tv_usec = 0;
 		t[1].tv_sec = modtime;
 		t[1].tv_usec = 0;
@@ -160,12 +164,12 @@ int set_modtime(char *fname, time_t modt
 		return utimes(fname, t);
 #elif defined HAVE_UTIMBUF
 		struct utimbuf tbuf;
-		tbuf.actime = time(NULL);
+		tbuf.actime = atime;
 		tbuf.modtime = modtime;
 		return utime(fname,&tbuf);
 #elif defined HAVE_UTIME
 		time_t t[2];
-		t[0] = time(NULL);
+		t[0] = atime;
 		t[1] = modtime;
 		return utime(fname,t);
 #else
@@ -1191,8 +1195,8 @@ int msleep(int t)
 
 
 /**
- * Determine if two file modification times are equivalent (either
- * exact or in the modification timestamp window established by
+ * Determine if two file  times are equivalent (either
+ * exact or in the timestamp window established by
  * --modify-window).
  *
  * @retval 0 if the times should be treated as the same
@@ -1201,7 +1205,7 @@ int msleep(int t)
  *
  * @retval -1 if the 2nd is later
  **/
-int cmp_modtime(time_t file1, time_t file2)
+int cmp_time(time_t file1, time_t file2)
 {
 	if (file2 > file1) {
 		if (file2 - file1 <= modify_window)
