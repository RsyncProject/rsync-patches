Jeremy Bornstein wrote:

I recently had the need to transfer files only with different mod
dates (and to *not* transfer them based on file size differences).
This is because I'm backing up files remotely on an untrusted machine,
so I'm encrypting them with gpg before transfer.  I discovered that
rsync didn't already have a --date-only flag, so I added one and am
enclosing the diffs in case you (as I hope) decide to include this
option in future releases.

To use this patch, run these commands for a successful build:

    patch -p1 <patches/date-only.diff
    ./configure                                 (optional if already run)
    make

based-on: 72adf49ba8cb81426e2b9799fbd43c6284b013a9
diff --git a/generator.c b/generator.c
--- a/generator.c
+++ b/generator.c
@@ -67,6 +67,7 @@ extern int append_mode;
 extern int make_backups;
 extern int csum_length;
 extern int ignore_times;
+extern int date_only;
 extern int size_only;
 extern OFF_T max_size;
 extern OFF_T min_size;
@@ -621,6 +622,9 @@ int quick_check_ok(enum filetype ftype, const char *fn, struct file_struct *file
 		if (st->st_size != F_LENGTH(file))
 			return 0;
 
+		if (date_only)
+			return !mtime_differs(st, file);
+
 		/* If always_checksum is set then we use the checksum instead
 		 * of the file mtime to determine whether to sync. */
 		if (always_checksum > 0) {
diff --git a/options.c b/options.c
--- a/options.c
+++ b/options.c
@@ -113,6 +113,7 @@ int safe_symlinks = 0;
 int copy_unsafe_links = 0;
 int munge_symlinks = 0;
 int size_only = 0;
+int date_only = 0;
 int daemon_bwlimit = 0;
 int bwlimit = 0;
 int fuzzy_basis = 0;
@@ -681,6 +682,7 @@ static struct poptOption long_options[] = {
   {"chmod",            0,  POPT_ARG_STRING, 0, OPT_CHMOD, 0, 0 },
   {"ignore-times",    'I', POPT_ARG_NONE,   &ignore_times, 0, 0, 0 },
   {"size-only",        0,  POPT_ARG_NONE,   &size_only, 0, 0, 0 },
+  {"date-only",        0,  POPT_ARG_NONE,   &date_only, 0, 0, 0 },
   {"one-file-system", 'x', POPT_ARG_NONE,   0, 'x', 0, 0 },
   {"no-one-file-system",0, POPT_ARG_VAL,    &one_file_system, 0, 0, 0 },
   {"no-x",             0,  POPT_ARG_VAL,    &one_file_system, 0, 0, 0 },
@@ -2738,6 +2740,9 @@ void server_options(char **args, int *argc_p)
 	else if (missing_args == 1 && !am_sender)
 		args[ac++] = "--ignore-missing-args";
 
+	if (date_only)
+		args[ac++] = "--date-only";
+
 	if (modify_window_set && am_sender) {
 		char *fmt = modify_window < 0 ? "-@%d" : "--modify-window=%d";
 		if (asprintf(&arg, fmt, modify_window) < 0)
diff --git a/rsync.1.md b/rsync.1.md
--- a/rsync.1.md
+++ b/rsync.1.md
@@ -418,6 +418,7 @@ detailed description below for a complete description.
 --contimeout=SECONDS     set daemon connection timeout in seconds
 --ignore-times, -I       don't skip files that match size and time
 --size-only              skip files that match in size
+--date-only              skip files that match in mod-time
 --modify-window=NUM, -@  set the accuracy for mod-time comparisons
 --temp-dir=DIR, -T       create temporary files in directory DIR
 --fuzzy, -y              find similar file for basis if no dest file
@@ -665,6 +666,14 @@ your home directory (remove the '=' for that).
     after using another mirroring system which may not preserve timestamps
     exactly.
 
+0.  `--date-only`
+
+    Normally rsync will skip any files that are already the same size and have
+    the same modification time-stamp. With the --date-only option, files will
+    be skipped if they have the same timestamp, regardless of size. This may be
+    useful when the remote files have passed through a size-changing filter,
+    e.g. for encryption.
+
 0.  `--modify-window=NUM`, `-@`
 
     When comparing two timestamps, rsync treats the timestamps as being equal
