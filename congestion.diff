From: Dave Taht <d@taht.net>

In the bufferbloat age, anything that can make for a kinder, gentler bulk
transfer protocol seems desirable.

This add support for user and server selectable congestion control algorithms.

For example:
    --congestion-alg=lp # For the tcp-lp algorithm on the command line

And diffserv support:
    --diffserv=8 for setting the CS1 bit

Also available in rsync daemon modules:

[mystuff]
    congestion alg = westwood # for a wireless connection
    diffserv = 8

This could be improved by being able to specify a list of congestion algorithms
to try, symbolic names for diffserv (CS1), a better name than 'congestion-alg',
and some error checking.

To use this patch, run these commands for a successful build:

    patch -p1 <patches/congestion.diff
    ./configure                         (optional if already run)
    make

based-on: d4fc18f3755987ccea6e7f43609f862aa0254c5a
diff --git a/loadparm.c b/loadparm.c
--- a/loadparm.c
+++ b/loadparm.c
@@ -123,6 +123,7 @@ typedef struct {
 	char *auth_users;
 	char *charset;
 	char *comment;
+	char *congestion_alg;
 	char *dont_compress;
 	char *early_exec;
 	char *exclude;
@@ -152,6 +153,7 @@ typedef struct {
 	BOOL auth_users_EXP;
 	BOOL charset_EXP;
 	BOOL comment_EXP;
+	BOOL congestion_alg_EXP;
 	BOOL dont_compress_EXP;
 	BOOL early_exec_EXP;
 	BOOL exclude_EXP;
@@ -177,6 +179,7 @@ typedef struct {
 	BOOL temp_dir_EXP;
 	BOOL uid_EXP;
 
+	int diffserv;
 	int max_connections;
 	int max_verbosity;
 	int syslog_facility;
@@ -241,6 +244,7 @@ static const all_vars Defaults = {
  /* auth_users; */		NULL,
  /* charset; */ 		NULL,
  /* comment; */ 		NULL,
+ /* congestion_alg; */ 		NULL,
  /* dont_compress; */		DEFAULT_DONT_COMPRESS,
  /* early_exec; */		NULL,
  /* exclude; */ 		NULL,
@@ -269,6 +273,7 @@ static const all_vars Defaults = {
  /* auth_users_EXP; */		False,
  /* charset_EXP; */		False,
  /* comment_EXP; */		False,
+ /* congestion_alg_EXP; */	False,
  /* dont_compress_EXP; */	False,
  /* early_exec_EXP; */		False,
  /* exclude_EXP; */		False,
@@ -294,6 +299,7 @@ static const all_vars Defaults = {
  /* temp_dir_EXP; */		False,
  /* uid_EXP; */			False,
 
+ /* diffserv; */		8,
  /* max_connections; */		0,
  /* max_verbosity; */		1,
  /* syslog_facility; */		LOG_DAEMON,
@@ -412,6 +418,8 @@ static struct parm_struct parm_table[] =
  {"auth users",        P_STRING, P_LOCAL, &Vars.l.auth_users,          NULL,0},
  {"charset",           P_STRING, P_LOCAL, &Vars.l.charset,             NULL,0},
  {"comment",           P_STRING, P_LOCAL, &Vars.l.comment,             NULL,0},
+ {"congestion alg",    P_STRING, P_LOCAL, &Vars.l.congestion_alg,      NULL,0},
+ {"diffserv",          P_INTEGER,P_LOCAL, &Vars.l.diffserv,            NULL,0},
  {"dont compress",     P_STRING, P_LOCAL, &Vars.l.dont_compress,       NULL,0},
  {"early exec",        P_STRING, P_LOCAL, &Vars.l.early_exec,          NULL,0},
  {"exclude from",      P_STRING, P_LOCAL, &Vars.l.exclude_from,        NULL,0},
@@ -554,6 +562,7 @@ FN_GLOBAL_BOOL(lp_haproxy_header, haproxy_header)
 FN_LOCAL_STRING(lp_auth_users, auth_users)
 FN_LOCAL_STRING(lp_charset, charset)
 FN_LOCAL_STRING(lp_comment, comment)
+FN_LOCAL_STRING(lp_congestion_alg, congestion_alg)
 FN_LOCAL_STRING(lp_dont_compress, dont_compress)
 FN_LOCAL_STRING(lp_early_exec, early_exec)
 FN_LOCAL_STRING(lp_exclude, exclude)
@@ -579,6 +588,7 @@ FN_LOCAL_STRING(lp_syslog_tag, syslog_tag)
 FN_LOCAL_STRING(lp_temp_dir, temp_dir)
 FN_LOCAL_STRING(lp_uid, uid)
 
+FN_LOCAL_INTEGER(lp_diffserv, diffserv)
 FN_LOCAL_INTEGER(lp_max_connections, max_connections)
 FN_LOCAL_INTEGER(lp_max_verbosity, max_verbosity)
 FN_LOCAL_INTEGER(lp_syslog_facility, syslog_facility)
diff --git a/options.c b/options.c
--- a/options.c
+++ b/options.c
@@ -74,6 +74,8 @@ int delete_during = 0;
 int delete_before = 0;
 int delete_after = 0;
 int delete_excluded = 0;
+int diffserv = 8;
+char *congestion_alg = NULL;
 int remove_source_files = 0;
 int one_file_system = 0;
 int protocol_version = PROTOCOL_VERSION;
@@ -970,6 +972,8 @@ static struct poptOption long_options[] = {
   {"outbuf",           0,  POPT_ARG_STRING, &outbuf_mode, 0, 0, 0 },
   {"remote-option",   'M', POPT_ARG_STRING, 0, 'M', 0, 0 },
   {"protocol",         0,  POPT_ARG_INT,    &protocol_version, 0, 0, 0 },
+  {"congestion-alg",   0,  POPT_ARG_STRING, &congestion_alg, 0, 0, 0 },
+  {"diffserv",         0,  POPT_ARG_INT,    &diffserv, 0, 0, 0 },
   {"checksum-seed",    0,  POPT_ARG_INT,    &checksum_seed, 0, 0, 0 },
   {"server",           0,  POPT_ARG_NONE,   0, OPT_SERVER, 0, 0 },
   {"sender",           0,  POPT_ARG_NONE,   0, OPT_SENDER, 0, 0 },
diff --git a/rsync.1.md b/rsync.1.md
--- a/rsync.1.md
+++ b/rsync.1.md
@@ -438,6 +438,8 @@ detailed description below for a complete description.
 --address=ADDRESS        bind address for outgoing socket to daemon
 --port=PORT              specify double-colon alternate port number
 --sockopts=OPTIONS       specify custom TCP options
+--diffserv=[0-63]        specify diffserv setting
+--congestion-alg=STRING  choose a congestion algo
 --blocking-io            use blocking I/O for the remote shell
 --outbuf=N|L|B           set out buffering to None, Line, or Block
 --stats                  give some file-transfer stats
diff --git a/socket.c b/socket.c
--- a/socket.c
+++ b/socket.c
@@ -39,6 +39,8 @@ extern char *sockopts;
 extern int default_af_hint;
 extern int connect_timeout;
 extern int pid_file_fd;
+extern int diffserv;
+extern char *congestion_alg;
 
 #ifdef HAVE_SIGACTION
 static struct sigaction sigact;
@@ -166,6 +168,37 @@ static void contimeout_handler(UNUSED(int val))
 	connect_timeout = -1;
 }
 
+/* Set special socket options
+ *
+ * Diffserv is a value in the range of 0-63, and needs to be shifted left
+ *          2 places AND treated differently for ipv4 and ipv6.
+ * Setting TCP congestion control is rather Linux specific (at the moment)
+ * and sends a varying length string to setsockopt rather than an integer
+ * or character.
+*/
+
+void set_special_sockopts(int s)
+{
+#if defined(TCP_CONGESTION)
+	if (congestion_alg) {
+		if (setsockopt(s, SOL_TCP, TCP_CONGESTION, congestion_alg, strlen(congestion_alg)) == -1)
+			rprintf(FINFO, "Couldn't set %s congestion algorithm\n", congestion_alg);
+	}
+#endif
+
+/* setting the diffserv/tos bits is different on ipv6 and
+ *  ipv4, so we just hammer down on both and ignore the result
+ *  And ipv6 demands an int for v. I didn't write the spec.
+ */
+	if (diffserv) {
+		int v = (diffserv & 63) <<2;
+		setsockopt(s,IPPROTO_IP, IP_TOS, &v, sizeof(v));
+#if defined(IPV6_TCLASS)
+		setsockopt(s,IPPROTO_IPV6, IPV6_TCLASS, &v, sizeof(v));
+#endif
+	}
+}
+
 /* Open a socket to a tcp remote host with the specified port.
  *
  * Based on code from Warren.  Proxy support by Stephen Rothwell.
@@ -275,6 +308,7 @@ int open_socket_out(char *host, int port, const char *bind_addr,
 			alarm(connect_timeout);
 		}
 
+		set_special_sockopts(s);
 		set_socket_options(s, sockopts);
 		while (connect(s, res->ai_addr, res->ai_addrlen) < 0) {
 			if (connect_timeout < 0)
@@ -449,6 +483,7 @@ static int *open_socket_in(int type, int port, const char *bind_addr,
 			continue;
 		}
 
+		set_special_sockopts(s);
 		setsockopt(s, SOL_SOCKET, SO_REUSEADDR,
 			   (char *)&one, sizeof one);
 		if (sockopts)
